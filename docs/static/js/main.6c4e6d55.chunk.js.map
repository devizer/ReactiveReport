{"version":3,"sources":["components/ErrorsOnlyDispatcher.js","components/ErrorsOnlyActions.js","components/AboutDialog.js","components/NavMenu.js","components/Layout.js","components/EventIcon.js","components/AppUtils.js","components/BootAtButton.js","components/ErrorsOnlyStore.js","components/BootLogRoot.js","Page404.js","App.js","registerServiceWorker.js","index.js"],"names":["ErrorsOnlyDispatcher","Dispatcher","ERRORS_ONLY_ACTION","DialogTitle","withStyles","theme","root","borderBottom_ignoreit","concat","palette","divider","margin","padding","spacing","unit","closeButton","position","right","top","color","grey","props","children","classes","onClose","react_default","a","createElement","DialogTitle_default","disableTypography","className","Typography_default","variant","IconButton_default","aria-label","onClick","Close_default","DialogContent","MuiDialogContent","AppAboutDialog","borderTop2","MuiDialogActions","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","open","componentWillReceiveProps","nextProps","setState","handleClickOpen","handleClose","dd","infoItem","width","marginBottom","marginTop","term","left","textAlign","value","borderBottom","inherits","createClass","key","window","location","_this2","Dialog_default","aria-labelledby","AboutDialog_DialogTitle","id","gotoGithub","react_fontawesome_index_es","icon","faGithub","AboutDialog_DialogContent","gutterBottom","style","AppGitInfo","Version","Branch","Date","CommitDate","toLocaleDateString","href","React","Component","NavMenu1","closeAbout","aboutOpened","handleChange","name","event","errorsOnly","newValue","target","checked","defineProperty","console","log","dispatcher","dispatch","type","hintVisible","collapsed","OnlyErrors","closeHint","bind","assertThisInitialized","reason","hintMessage","AppBar_default","Toolbar_default","openAbout","menuButton","InfoOutlined_default","flexGrow","Switch_default","onChange","Snackbar_default","snack","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","close","AboutDialog_AppAboutDialog","displayName","NavMenu","grow","marginLeft","marginRight","Layout","_Component","NavMenu_NavMenu","reactstrap_es","EventIcon","button","Action","faRunning","faStopCircle","faArrowAltCircleRight","IsInfo","faExclamationTriangle","LOG","toConsole","caption","obj","BootAtButton","$","boot","bootAt","IsOk","themeOk","themeError","styles","Button_default","classNames","isSelected","HasErrors","TotalErrors","DateField","TimeField","createMuiTheme","primary","green","red","errorsOnlyStore","ErrorsOnlyStore","activeErrorsOnly","ErrorsOnlyActions","emit","EventEmitter","register","handleActions","require","BootLogRoot","updateErrorsOnly","getErrorsOnly","boots","BootLogStaticDataSource","Boots","selectBootAt","match","argBootAtKey","params","bootAtKey","startAt","bootIndex","map","UniqueKey","Fail","Crash","mo","MomentFormat","BootAt","format","eventIndex","Events","ev","Type","RoundedAt","At","Math","round","Message","replace","str","the","servicename","service","offset","s","fullServiceName","ServiceName","timely","transformDuration","selectedKey","logEvents","on","filter","uniqueKey","rowSource","find","el","events","selectedBoot","dateAsJson","parse","toLocaleString","month","day","hour","minute","second","currentCount","onlyErrors","bootEvent","TimeGenerated","undefined","paddingTop","display","border","borderRight","backgroundColor","minWidth","maxWidth","BootAtButton_BootAtButton","Hidden","EventIcon_EventIcon","class","EventCode","dangerouslySetInnerHTML","__html","App","Layout_Layout","Route","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","App_App","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6c4e6d55.chunk.js","sourcesContent":["import {Dispatcher} from \"flux\";\r\n\r\nexport default new Dispatcher();","// Separate file per kind of message\r\nimport dispatcher from \"./ErrorsOnlyDispatcher\";\r\n\r\nexport const ERRORS_ONLY_ACTION = \"ChangeErrorsOnly\";\r\n\r\nexport function changeErrorsOnly(errorsOnly) {\r\n    dispatcher.dispatch({\r\n        type: ERRORS_ONLY_ACTION,\r\n        value: errorsOnly\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport AppGitInfo from '../AppGitInfo'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons\";\r\nimport Toolbar from \"./NavMenu\";\r\n\r\nconst DialogTitle = withStyles(theme => ({\r\n    root: {\r\n        borderBottom_ignoreit: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing.unit,\r\n        top: theme.spacing.unit,\r\n        color: theme.palette.grey[500],\r\n    },\r\n}))(props => {\r\n    const { children, classes, onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n    root: {\r\n        borderTop2: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing.unit,\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nconst info = {\r\n    \r\n}\r\n\r\nexport class AppAboutDialog extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({\r\n            open: nextProps.open,\r\n        });\r\n    }\r\n    \r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n        if (this.props.onClose)\r\n            this.props.onClose();\r\n    };\r\n\r\n    gotoGithub() {\r\n        window.location = \"https://github.com/devizer/ReactiveReport/tree/master/sources/WindowsBootAnalyzer/ClientApp/src/components\";\r\n    }\r\n\r\n    dd = {\r\n        infoItem: {\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            marginBottom: \"9px\",\r\n            marginTop: \"15px\",\r\n        },\r\n        term: {\r\n            position: \"absolute\",\r\n            left: 0, top: 0,\r\n            textAlign: \"left\",\r\n            width: \"100%\",\r\n        },\r\n        value: {\r\n            position: \"absolute\",\r\n            left: 0, top: 0,\r\n            textAlign: \"right\",\r\n            width: \"100%\",\r\n            borderBottom: \"1px dotted grey\"\r\n        },\r\n        a: {\r\n            color: \"black\"\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        let dd = this.dd;\r\n\r\n        return (\r\n                <Dialog\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.state.open}\r\n                >\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n                        <IconButton onClick={() => this.gotoGithub()} className={\"\"} color=\"inherit\" aria-label=\"Source Code\">\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </IconButton>\r\n                        About\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography gutterBottom>\r\n                            It's .NET Core app for troubleshooting crashes and fails of windows services using Material&nbsp;UI with React.\r\n                            Please don't take this playground with Material UI framework too seriously.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>version</div>\r\n                                <div style={dd.value}>{AppGitInfo.Version}</div>\r\n                            </div>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>branch</div>\r\n                                <div style={dd.value}>{AppGitInfo.Branch}</div>\r\n                            </div>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>commit</div>\r\n                                <div style={dd.value}>{new Date(AppGitInfo.CommitDate*1000).toLocaleDateString()}</div>\r\n                            </div>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>github</div>\r\n                                <div style={dd.value}><a style={dd.a} href=\"https://github.com/devizer/ReactiveReport\">devizer/ReactiveReport</a></div>\r\n                            </div>\r\n                        </Typography>\r\n                    </DialogContent>\r\n                </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport * as ErrorsOnlyActions from \"./ErrorsOnlyActions\";\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { AppAboutDialog } from \"./AboutDialog\"\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n    close : {\r\n    },\r\n    snack : {\r\n        margin: '1px',\r\n        padding: '5px'\r\n    }\r\n    \r\n};\r\n\r\nclass NavMenu1 extends Component {\r\n    static displayName = NavMenu1.name;\r\n    \r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            collapsed: true,\r\n            OnlyErrors: false,\r\n            hintVisible: false,\r\n            aboutOpened: false,\r\n        };\r\n        \r\n        this.closeHint = this.closeHint.bind(this);\r\n    }\r\n\r\n    closeHint(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ hintVisible: false });\r\n    };\r\n    \r\n    closeAbout = () => {\r\n        this.setState({aboutOpened: false});\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        let newValue = event.target.checked;\r\n        this.setState({ [name]: event.target.checked });\r\n        console.log(`[${name}] switch changed to ${newValue}`);\r\n        ErrorsOnlyActions.changeErrorsOnly(newValue);\r\n        this.setState({ hintVisible: true });\r\n    };\r\n    \r\n    gotoGithub() {\r\n        window.location = \"https://github.com/devizer/ReactiveReport/tree/master/sources/WindowsBootAnalyzer/ClientApp/src/components\";\r\n    }\r\n    \r\n    openAbout() {\r\n        this.setState({\r\n            aboutOpened: true,\r\n        });\r\n    }\r\n\r\n    render () {\r\n        \r\n        const classes = this.props.classes;\r\n        \r\n        let hintMessage = <span id=\"message-id\">Show <b>Errors</b> only</span>;\r\n        if (!this.state.OnlyErrors)\r\n            hintMessage = <span id=\"message-id\">Show both <b>Errors</b> and info events</span>;\r\n        \r\n        return (\r\n            <div>    \r\n\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        {/* \r\n                        <IconButton onClick={() => this.gotoGithub()} className={classes.menuButton} color=\"inherit\" aria-label=\"Source Code\">\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </IconButton>\r\n                        */}\r\n                        <IconButton onClick={() => {this.openAbout()}} className={classes.menuButton} color=\"inherit\" aria-label=\"About\">\r\n                            <InfoOutlinedIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\" style={{flexGrow: 10}}>\r\n                            Reactive Material Report\r\n                        </Typography>\r\n                        <Switch\r\n                            checked={this.state.OnlyErrors}\r\n                            onChange={this.handleChange('OnlyErrors')}\r\n                            value=\"OnlyErrors\"\r\n                        />\r\n\r\n                        <Snackbar\r\n                            className={classes.snack}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            open={this.state.hintVisible}\r\n                            autoHideDuration={4000}\r\n                            onClose={this.closeHint}\r\n                            ContentProps={{\r\n                                'aria-describedby': 'message-id',\r\n                            }}\r\n                            message={hintMessage}\r\n                            action={[\r\n                                <IconButton\r\n                                    key=\"close\"\r\n                                    aria-label=\"Close\"\r\n                                    color=\"inherit\"\r\n                                    className={classes.close}\r\n                                    onClick={this.closeHint}\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>,\r\n                            ]}\r\n                        />\r\n                        \r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <AppAboutDialog open={this.state.aboutOpened} onClose={() => this.closeAbout()}/>\r\n                \r\n            </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst NavMenu = withStyles(styles)(NavMenu1);\r\nexport {NavMenu};\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\n\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container className={\"THE-CONTAINER\"}>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\r\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStopCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport { faTired } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleUp } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\r\nimport {Component} from \"react\";\r\nimport React from \"react\";\r\n\r\nexport class EventIcon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let button = null;\r\n        if (this.props.event.Action == \"ServiceStarted\")\r\n            button = <FontAwesomeIcon icon={faRunning}/>;\r\n        else if (this.props.event.Action == \"ServiceStopped\")\r\n            button = <FontAwesomeIcon icon={faStopCircle}/>;\r\n        else if (this.props.event.Action == \"Boot\")\r\n            button = <FontAwesomeIcon icon={faArrowAltCircleRight}/>;\r\n\r\n        if (!this.props.event.IsInfo)\r\n            button = <FontAwesomeIcon icon={faExclamationTriangle}/>;\r\n\r\n        if (button === null)\r\n            button = <span/>;\r\n\r\n        return (\r\n            <span className=\"EventIconWrapper\">{button}</span>\r\n        );\r\n\r\n        {/*<FontAwesomeIcon icon={faStopCircle} />*/\r\n        }\r\n        {/*<FontAwesomeIcon icon={faRunning} />&nbsp;*/\r\n        }\r\n        {/*<FontAwesomeIcon icon={faTired} />&nbsp;*/\r\n        }\r\n        {/*<FontAwesomeIcon icon={faExclamationTriangle} />&nbsp;*/\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","export class LOG {\r\n    static toConsole = function(caption, obj) {\r\n        console.log(`🡦 ${caption} 🡧`);\r\n        console.log(obj);\r\n        console.log('\\r\\n');\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {LOG} from \"./AppUtils\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport green from '@material-ui/core/colors/green';\r\nimport classNames from \"classnames\";\r\n\r\nconst $ = window.$;\r\n\r\nexport class BootAtButton extends Component {\r\n\r\n    static displayName = BootAtButton.name;\r\n\r\n    static themeOk = createMuiTheme({\r\n        palette: {\r\n            primary: green,\r\n        },\r\n    });\r\n\r\n    static themeError = createMuiTheme({\r\n        palette: {\r\n            primary: red,\r\n        },\r\n    });\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        LOG.toConsole(\"Properties of the BootAtButton\", props);\r\n    }\r\n\r\n    render() {\r\n        let boot = this.props.bootAt;\r\n        let theme = boot.IsOk ? BootAtButton.themeOk : BootAtButton.themeError;\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Button\r\n                    onClick={() => this.props.onClick()}\r\n                    color={'primary'}\r\n                    variant={'outlined'}\r\n                    style={this.props.style}\r\n                    className={classNames(this.props.isSelected ? \"BootAtSelected\" : \"BootAtNonSelected\")}\r\n                >\r\n                    <div className={classNames('MainCell', boot.HasErrors ? \"BootError\" : \"BootOk\")}>\r\n                        <div className={boot.IsOk ? \"MainCell-OK\" : \"MainCell-ErrorCounter\"}>{boot.IsOk ? \"OK\" : ('' + boot.TotalErrors)}</div>\r\n                        <div className=\"MainCell-Date\">{boot.DateField}</div>\r\n                        <div className=\"MainCell-Time\">{boot.TimeField}</div>\r\n                    </div>\r\n                </Button>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n","import dispatcher from \"./ErrorsOnlyDispatcher\";\r\nimport {EventEmitter} from \"events\";\r\nimport * as ErrorsOnlyActions from \"./ErrorsOnlyActions\";\r\n\r\nclass ErrorsOnlyStore extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n        // local copy per message\r\n        this.activeErrorsOnly = false;\r\n        \r\n    }\r\n\r\n    // single handler for the app for each kind of message\r\n    handleActions(action) {\r\n        switch (action.type) {\r\n            // a casr per message\r\n            case ErrorsOnlyActions.ERRORS_ONLY_ACTION: {\r\n                this.activeErrorsOnly = action.value;\r\n                this.emit(\"storeUpdated\");\r\n                break;\r\n            }\r\n            default: {\r\n            }\r\n        }\r\n    }\r\n\r\n    // a method per message\r\n    getErrorsOnly() {\r\n        return this.activeErrorsOnly;\r\n    }\r\n}\r\n\r\nconst errorsOnlyStore = new ErrorsOnlyStore();\r\ndispatcher.register(errorsOnlyStore.handleActions.bind(errorsOnlyStore));\r\nexport default errorsOnlyStore;\r\n","import React, { Component } from 'react';\r\nimport MomentFormat from 'moment';\r\nimport {EventIcon} from \"./EventIcon\"\r\nimport classNames from \"classnames\"\r\n\r\nimport {BootAtButton} from \"./BootAtButton\";\r\nimport BootLogStaticDataSource from '../Final-Report.json'\r\nimport ErrorsOnlyStore from \"./ErrorsOnlyStore\";\r\nimport {LOG} from \"./AppUtils\"\r\n\r\nimport './BootLog.css';\r\n\r\nvar proxyArrayFind = require('ponyfill-array'); /* IE 11 fix of find method */\r\nlet TheRoot = 'I AM THE GROOT';\r\nconsole.log(TheRoot);\r\nconst $ = window.$;\r\n\r\nexport class BootLogRoot extends Component {\r\n\r\n    static displayName = BootLogRoot.name;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        var boots = BootLogStaticDataSource.Boots;\r\n        this.selectBootAt = this.selectBootAt.bind(this);\r\n        \r\n        LOG.toConsole(\"props of BootLogRoot\", props);\r\n        LOG.toConsole(\"match of BootLogRoot\", props.match);\r\n        \r\n        this.argBootAtKey = props.match.params.bootAtKey;\r\n        \r\n        console.log('type of boots: ' + (typeof boots));\r\n        console.log('boots[] length: ' + (boots.length));\r\n        console.log(boots);\r\n\r\n        let startAt = +new Date();\r\n        let bootIndex = 0;\r\n        boots.map(boot => {\r\n            boot.UniqueKey = \"B\" + (++bootIndex);\r\n            boot.TotalErrors = boot.Fail + boot.Crash;\r\n            boot.HasErrors = boot.TotalErrors > 0;\r\n            boot.IsOk = !boot.HasErrors;\r\n            let mo = MomentFormat(boot.BootAt);\r\n            boot.DateField = mo.format(\"MMM DD (YYYY)\");\r\n            boot.TimeField = mo.format(\"HH:mm:ss A\");\r\n            let eventIndex = 0;\r\n            boot.Events.map(ev => {\r\n                ev.UniqueKey = `B${bootIndex}-E${++eventIndex}`;\r\n                ev.IsInfo = ev.Type == \"Information\";\r\n                ev.RoundedAt = ev.At < 100 ? Math.round(ev.At*10) / 10 : Math.round(ev.At);\r\n                if (ev.Message)\r\n                {\r\n                    // [\\w|\\s|$|\\(|\\)|\\+]\r\n                    ev.Message = ev.Message.replace(/([T|t]he )(.*)( service)/gm, function (str, the, servicename, service, offset, s) {\r\n                        let fullServiceName = ev.ServiceName ? ev.ServiceName : servicename; \r\n                        return `${the}<b>${fullServiceName}</b>${service}`;\r\n                    });\r\n                    \r\n                    if (!ev.IsInfo)\r\n                    {\r\n                        ev.Message = ev.Message.replace(/(timely|timeout)/gmi, function (str, timely, offset, s) {\r\n                            return `<u>${timely}</u>`;\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        let transformDuration = (+new Date()) - startAt;\r\n        console.log(`ON Start report mapping duration: ${transformDuration}`);\r\n        \r\n\r\n        this.state = {\r\n            boots: boots, \r\n            selectedKey: \"\",\r\n            logEvents: [],\r\n            errorsOnly: ErrorsOnlyStore.getErrorsOnly()\r\n        };\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        ErrorsOnlyStore.on('storeUpdated', this.updateErrorsOnly);\r\n        console.log(\"componentDidMount()\");\r\n\r\n        let bootAtKey = this.props.match.params.bootAtKey;\r\n        if (bootAtKey)\r\n        {\r\n            let filtered = this.state.boots.filter(boot => boot.UniqueKey === bootAtKey);\r\n            if (filtered.length === 0)\r\n            {\r\n                // goto 404\r\n                bootAtKey = null;\r\n                console.log(`MOUNTING: [${bootAtKey}] not found`);\r\n            }\r\n        }\r\n\r\n        if (!bootAtKey && this.state.boots.length > 0) {\r\n            bootAtKey = this.state.boots[0].UniqueKey;\r\n        }\r\n        \r\n        if (bootAtKey) {\r\n            this.selectBootAt(bootAtKey);\r\n        }\r\n\r\n    }\r\n    \r\n    updateErrorsOnly = () => {\r\n        this.setState({errorsOnly: ErrorsOnlyStore.getErrorsOnly()});\r\n        console.log(`Change-Errors-Only event recieved: ${ErrorsOnlyStore.getErrorsOnly()}`);\r\n    };\r\n\r\n    selectBootAt(uniqueKey) {\r\n        let logPrefix = \"selectBootAt()\";\r\n        console.log(`selectBootAt() CLICK ON ${uniqueKey}`);\r\n        let boots = this.state.boots;\r\n        LOG.toConsole(`selectBootAt() [BootLogRoot]::state.boots`, boots);\r\n\r\n        let rowSource = this.state.boots.find( (el) => el.UniqueKey === uniqueKey);\r\n        \r\n        LOG.toConsole(`${logPrefix}DataSource found`, rowSource);\r\n        let events = rowSource ? rowSource.Events : [];\r\n        this.setState({\r\n            selectedKey: uniqueKey,\r\n            logEvents: events,\r\n            selectedBoot: rowSource,\r\n        });\r\n\r\n        let x = 5;\r\n    }\r\n\r\n    dateAsTimeString(dateAsJson) {\r\n        var d = new Date(Date.parse(dateAsJson));\r\n        var options = {month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit'};\r\n        return d.toLocaleString('en-US', options);\r\n    }\r\n\r\n    incrementCounter() {\r\n        this.setState({\r\n            currentCount: this.state.currentCount + 1\r\n        });\r\n    }\r\n    \r\n    render() {\r\n\r\n        let onlyErrors = this.state.errorsOnly;\r\n        let bootEvent = {\r\n            At: 0,\r\n            Action: \"Boot\",\r\n            Type: \"Information\",\r\n            TimeGenerated: this.state.selectedBoot ? this.state.selectedBoot.BootAt : undefined,\r\n            Message: \"The operating system started. \" + (this.state.errorsOnly ? \"Only fails of services are shown below.\" : \"\"),\r\n            IsInfo: true,\r\n        };\r\n\r\n        return (\r\n            <div style={{}}>\r\n                <div style={{paddingTop: \"12px\", display: \"flex\", border: \"1px solid transparent\"}}>\r\n                    <div className=\"chooseBootAt\" style={{display: \"block\", flexGrow: 1, borderRight: \"1px solid transparent\", backgroundColor: \"inherit\", width: 160, minWidth: 160, maxWidth: 160}}>\r\n                        {this.state.boots.map(boot =>\r\n                            <BootAtButton\r\n                                onClick={() => { this.selectBootAt(boot.UniqueKey) }}\r\n                                bootAt={boot}\r\n                                isSelected={this.state.selectedKey === boot.UniqueKey}\r\n                                style={{display: \"block\"}}\r\n                            />\r\n                        )}\r\n                        <input type=\"button\" value=\"classic\" className=\"Hidden\"/>\r\n                    </div>\r\n                    \r\n                    <div style={{flexGrow: 6}}>\r\n                        {/* First event: Boot at */}\r\n                        <div className={classNames(\"Event\", \"InfoEvent\", {Hidden: !this.state.selectedBoot})}>\r\n                            <EventIcon event={bootEvent}/>{' '}\r\n                            <span id=\"EventAt\">{MomentFormat(bootEvent.TimeGenerated).format(\"HH:mm:ss A\")}</span>{': '}\r\n                            <span>{bootEvent.Message}</span>\r\n                        </div>\r\n                        {/* All the events */}\r\n                        {this.state.logEvents.filter(ev => !onlyErrors || !ev.IsInfo).map(ev =>\r\n                            <div className={classNames(\"Event\", ev.IsInfo ? \"InfoEvent\" : \"TroubleEvent\")}>\r\n                                <EventIcon event={ev}/>{' '}\r\n                                <span class=\"EventAt\">\r\n                                    {MomentFormat(ev.TimeGenerated).format(\"HH:mm:ss A\")}\r\n                                    {' at '}{ev.RoundedAt + \"s\"}\r\n                                </span>{', '}{ev.IsInfo ? \"\" : <span>[{ev.EventCode}]{' '}</span>}\r\n                                <span dangerouslySetInnerHTML={{__html: ev.Message}}/>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\r\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStopCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport { faTired } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleUp } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\r\nimport {Component} from \"react\";\r\nimport React from \"react\";\r\n\r\nexport class Page404 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <h1 style={{textAlign: \"center\", fontSize:96,marginTop: 20}}>404</h1>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { BootLogRoot } from \"./components/BootLogRoot\";\r\nimport { Page404 } from \"./Page404\";\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    render () {\r\n        return (\r\n            <Layout>\r\n                <Route exact path='/boot-at/:bootAtKey/:bootAtComment' component={BootLogRoot} />\r\n                <Route exact path='/' component={BootLogRoot} />\r\n                {/* <Route component={Page404} /> */}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}