{"version":3,"sources":["components/ErrorsOnlyDispatcher.js","components/ErrorsOnlyActions.js","components/AppUtils.js","components/BootAtButton.js","components/AboutDialog.js","components/NavMenu.js","components/Layout.js","components/EventIcon.js","components/ErrorsOnlyStore.js","components/BootLogRoot.js","Page404.js","App.js","registerServiceWorker.js","index.js"],"names":["ErrorsOnlyDispatcher","Dispatcher","ERRORS_ONLY_ACTION","LOG","Object","classCallCheck","this","toConsole","caption","obj","process","BootAtButton","window","$","_Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","_this2","boot","bootAt","theme","IsOk","themeOk","themeError","react_default","a","createElement","styles","Button_default","onClick","color","variant","style","className","classNames","isSelected","HasErrors","TotalErrors","DateField","TimeField","Component","displayName","name","createMuiTheme","palette","primary","green","red","DialogTitle","withStyles","root","borderBottom_ignore_it","concat","divider","margin","padding","spacing","unit","closeButton","position","right","top","grey","children","classes","onClose","DialogTitle_default","disableTypography","Typography_default","IconButton_default","aria-label","Close_default","DialogContent","MuiDialogContent","AppAboutDialog","borderTop2","MuiDialogActions","_React$Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","state","open","componentWillReceiveProps","nextProps","setState","handleClickOpen","handleClose","dd","infoItem","width","marginBottom","marginTop","term","left","textAlign","borderBottom","location","Dialog_default","aria-labelledby","AboutDialog_DialogTitle","id","gotoGithub","react_fontawesome_index_es","icon","faGithub","AboutDialog_DialogContent","gutterBottom","AppGitInfo","Version","Branch","Date","CommitDate","toLocaleDateString","href","React","NavMenu1","closeAbout","aboutOpened","handleChange","event","errorsOnly","newValue","target","checked","defineProperty","console","log","dispatcher","dispatch","type","hintVisible","collapsed","OnlyErrors","closeHint","bind","assertThisInitialized","reason","hintMessage","AppBar_default","Toolbar_default","openAbout","menuButton","InfoOutlined_default","flexGrow","Switch_default","onChange","Snackbar_default","snack","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","close","AboutDialog_AppAboutDialog","NavMenu","grow","marginLeft","marginRight","Layout","NavMenu_NavMenu","reactstrap_es","EventIcon","button","Action","faRunning","faStopCircle","faArrowAltCircleRight","IsInfo","faExclamationTriangle","errorsOnlyStore","ErrorsOnlyStore","activeErrorsOnly","ErrorsOnlyActions","emit","EventEmitter","register","handleActions","require","MyExpansionPanel","expanded","ExpansionPanel","BootLogRoot","updateErrorsOnly","getErrorsOnly","panel","expandableServices","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","text","secondary","boots","BootLogStaticDataSource","Boots","selectBootAt","match","argBootAtKey","params","bootAtKey","startAt","bootIndex","map","UniqueKey","Fail","Crash","mo","MomentFormat","BootAt","format","eventIndex","Events","ev","Type","RoundedAt","At","Math","round","Message","replace","str","the","servicename","service","offset","s","fullServiceName","ServiceName","timely","transformDuration","servicesWithErrors","Enumerable","SelectMany","b","Where","e","Select","Distinct","OrderBy","ToArray","join","selectedKey","logEvents","on","filter","uniqueKey","rowSource","find","el","events","selectedBoot","onlyErrors","bootEvent","TimeGenerated","undefined","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","svc","paddingTop","display","border","borderRight","backgroundColor","minWidth","maxWidth","BootAtButton_BootAtButton","Hidden","EventIcon_EventIcon","EventCode","dangerouslySetInnerHTML","__html","App","Layout_Layout","Route","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","App_App","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.db8f9a23.chunk.js","sourcesContent":["import {Dispatcher} from \"flux\";\r\n\r\nexport default new Dispatcher();","// Separate file per kind of message\r\nimport dispatcher from \"./ErrorsOnlyDispatcher\";\r\n\r\nexport const ERRORS_ONLY_ACTION = \"ChangeErrorsOnly\";\r\n\r\nexport function changeErrorsOnly(errorsOnly) {\r\n    dispatcher.dispatch({\r\n        type: ERRORS_ONLY_ACTION,\r\n        value: errorsOnly\r\n    })\r\n}\r\n","export class LOG {\r\n    static toConsole = function(caption, obj) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            console.log(`🡦 ${caption} 🡧`);\r\n            console.log(obj);\r\n            console.log('\\r\\n');\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {LOG} from \"./AppUtils\"\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport green from '@material-ui/core/colors/green';\r\nimport classNames from \"classnames\";\r\n// import {PropTypes} from \"@material-ui/core\";\r\n\r\nconst $ = window.$;\r\n\r\nexport class BootAtButton extends Component {\r\n\r\n    static displayName = BootAtButton.name;\r\n\r\n    static themeOk = createMuiTheme({\r\n        palette: {\r\n            primary: green,\r\n        },\r\n    });\r\n\r\n    static themeError = createMuiTheme({\r\n        palette: {\r\n            primary: red,\r\n        },\r\n    });\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        LOG.toConsole(\"Properties of the BootAtButton\", props);\r\n    }\r\n\r\n    render() {\r\n        let boot = this.props.bootAt;\r\n        if (!boot) { boot = {}};\r\n        let theme = boot && boot.IsOk ? BootAtButton.themeOk : BootAtButton.themeError;\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Button\r\n                    onClick={() => this.props.onClick()}\r\n                    color={'primary'}\r\n                    variant={'outlined'}\r\n                    style={this.props.style}\r\n                    className={classNames(this.props.isSelected ? \"BootAtSelected\" : \"BootAtNonSelected\")}\r\n                >\r\n                    <div className={classNames('MainCell', boot.HasErrors ? \"BootError\" : \"BootOk\")}>\r\n                        <div className={boot.IsOk ? \"MainCell-OK\" : \"MainCell-ErrorCounter\"}>{boot.IsOk ? \"OK\" : ('' + boot.TotalErrors)}</div>\r\n                        <div className=\"MainCell-Date\">{boot.DateField}</div>\r\n                        <div className=\"MainCell-Time\">{boot.TimeField}</div>\r\n                    </div>\r\n                </Button>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nBootAtButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    bootAt: PropTypes.object.isRequired,\r\n};\r\n\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport AppGitInfo from '../AppGitInfo'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons\";\r\nimport Toolbar from \"./NavMenu\";\r\nimport PropTypes from \"prop-types\";\r\nimport {BootAtButton} from \"./BootAtButton\";\r\n\r\nconst DialogTitle = withStyles(theme => ({\r\n    root: {\r\n        borderBottom_ignore_it: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing.unit,\r\n        top: theme.spacing.unit,\r\n        color: theme.palette.grey[500],\r\n    },\r\n}))(props => {\r\n    const { children, classes, onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n    root: {\r\n        borderTop2: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing.unit,\r\n    },\r\n}))(MuiDialogActions);\r\n\r\n\r\nexport class AppAboutDialog extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({\r\n            open: nextProps.open,\r\n        });\r\n    }\r\n    \r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n        if (this.props.onClose)\r\n            this.props.onClose();\r\n    };\r\n\r\n    gotoGithub() {\r\n        window.location = \"https://github.com/devizer/ReactiveReport/tree/master/sources/WindowsBootAnalyzer/ClientApp/src/components\";\r\n    }\r\n\r\n    dd = {\r\n        infoItem: {\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            marginBottom: \"9px\",\r\n            marginTop: \"15px\",\r\n        },\r\n        term: {\r\n            position: \"absolute\",\r\n            left: 0, top: 0,\r\n            textAlign: \"left\",\r\n            width: \"100%\",\r\n        },\r\n        value: {\r\n            position: \"absolute\",\r\n            left: 0, top: 0,\r\n            textAlign: \"right\",\r\n            width: \"100%\",\r\n            borderBottom: \"1px dotted grey\"\r\n        },\r\n        a: {\r\n            color: \"black\"\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        let dd = this.dd;\r\n\r\n        return (\r\n                <Dialog\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.state.open}\r\n                >\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n                        <IconButton onClick={() => this.gotoGithub()} className={\"\"} color=\"inherit\" aria-label=\"Source Code\">\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </IconButton>\r\n                        About\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography gutterBottom>\r\n                            It's .NET Core app for troubleshooting crashes and fails of windows services using Material&nbsp;UI with React.\r\n                            Please don't take this playground with Material UI framework too seriously.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>version</div>\r\n                                <div style={dd.value}>{AppGitInfo.Version}</div>\r\n                            </div>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>branch</div>\r\n                                <div style={dd.value}>{AppGitInfo.Branch}</div>\r\n                            </div>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>commit</div>\r\n                                <div style={dd.value}>{new Date(AppGitInfo.CommitDate*1000).toLocaleDateString()}</div>\r\n                            </div>\r\n                            <div style={dd.infoItem}>&nbsp;\r\n                                <div style={dd.term}>github</div>\r\n                                <div style={dd.value}><a style={dd.a} href=\"https://github.com/devizer/ReactiveReport\">devizer/ReactiveReport</a></div>\r\n                            </div>\r\n                        </Typography>\r\n                    </DialogContent>\r\n                </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nAppAboutDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport * as ErrorsOnlyActions from \"./ErrorsOnlyActions\";\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { AppAboutDialog } from \"./AboutDialog\"\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n    close : {\r\n    },\r\n    snack : {\r\n        margin: '1px',\r\n        padding: '5px'\r\n    }\r\n    \r\n};\r\n\r\nclass NavMenu1 extends Component {\r\n    static displayName = NavMenu1.name;\r\n    \r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            collapsed: true,\r\n            OnlyErrors: false,\r\n            hintVisible: false,\r\n            aboutOpened: false,\r\n        };\r\n        \r\n        this.closeHint = this.closeHint.bind(this);\r\n    }\r\n\r\n    closeHint(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ hintVisible: false });\r\n    };\r\n    \r\n    closeAbout = () => {\r\n        this.setState({aboutOpened: false});\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        let newValue = event.target.checked;\r\n        this.setState({ [name]: event.target.checked });\r\n        console.log(`[${name}] switch changed to ${newValue}`);\r\n        ErrorsOnlyActions.changeErrorsOnly(newValue);\r\n        this.setState({ hintVisible: true });\r\n    };\r\n    \r\n    gotoGithub() {\r\n        window.location = \"https://github.com/devizer/ReactiveReport/tree/master/sources/WindowsBootAnalyzer/ClientApp/src/components\";\r\n    }\r\n    \r\n    openAbout() {\r\n        this.setState({\r\n            aboutOpened: true,\r\n        });\r\n    }\r\n\r\n    render () {\r\n        \r\n        const classes = this.props.classes;\r\n        \r\n        let hintMessage = <span id=\"message-id\">Show <b>Errors</b> only</span>;\r\n        if (!this.state.OnlyErrors)\r\n            hintMessage = <span id=\"message-id\">Show both <b>Errors</b> and info events</span>;\r\n        \r\n        return (\r\n            <div>    \r\n\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        {/* \r\n                        <IconButton onClick={() => this.gotoGithub()} className={classes.menuButton} color=\"inherit\" aria-label=\"Source Code\">\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </IconButton>\r\n                        */}\r\n                        <IconButton onClick={() => {this.openAbout()}} className={classes.menuButton} color=\"inherit\" aria-label=\"About\">\r\n                            <InfoOutlinedIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\" style={{flexGrow: 10}}>\r\n                            Reactive Material Report\r\n                        </Typography>\r\n                        <Switch\r\n                            aria-label=\"Show errors only\"\r\n                            checked={this.state.OnlyErrors}\r\n                            onChange={this.handleChange('OnlyErrors')}\r\n                            value=\"OnlyErrors\"\r\n                        />\r\n\r\n                        <Snackbar\r\n                            className={classes.snack}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            open={this.state.hintVisible}\r\n                            autoHideDuration={4000}\r\n                            onClose={this.closeHint}\r\n                            ContentProps={{\r\n                                'aria-describedby': 'message-id',\r\n                            }}\r\n                            message={hintMessage}\r\n                            action={[\r\n                                <IconButton\r\n                                    key=\"close\"\r\n                                    aria-label=\"Close\"\r\n                                    color=\"inherit\"\r\n                                    className={classes.close}\r\n                                    onClick={this.closeHint}\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>,\r\n                            ]}\r\n                        />\r\n                        \r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <AppAboutDialog open={this.state.aboutOpened} onClose={() => this.closeAbout()}/>\r\n                \r\n            </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst NavMenu = withStyles(styles)(NavMenu1);\r\nexport {NavMenu};\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\n\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container className={\"THE-CONTAINER\"}>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\r\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStopCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport { faTired } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleUp } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\r\nimport {Component} from \"react\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {BootAtButton} from \"./BootAtButton\";\r\n\r\nexport class EventIcon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let button = null;\r\n        if (this.props.event.Action === \"ServiceStarted\")\r\n            button = <FontAwesomeIcon icon={faRunning}/>;\r\n        else if (this.props.event.Action === \"ServiceStopped\")\r\n            button = <FontAwesomeIcon icon={faStopCircle}/>;\r\n        else if (this.props.event.Action === \"Boot\")\r\n            button = <FontAwesomeIcon icon={faArrowAltCircleRight}/>;\r\n        \r\n        if (!this.props.event.IsInfo)\r\n            button = <FontAwesomeIcon icon={faExclamationTriangle}/>;\r\n\r\n        if (button === null)\r\n            button = <span/>;\r\n\r\n        return (\r\n            <span className=\"EventIconWrapper\">{button}</span>\r\n        );\r\n\r\n        {/*<FontAwesomeIcon icon={faStopCircle} />*/\r\n        }\r\n        {/*<FontAwesomeIcon icon={faRunning} />&nbsp;*/\r\n        }\r\n        {/*<FontAwesomeIcon icon={faTired} />&nbsp;*/\r\n        }\r\n        {/*<FontAwesomeIcon icon={faExclamationTriangle} />&nbsp;*/\r\n        }\r\n\r\n    }\r\n}\r\n\r\nEventIcon.propTypes = {\r\n    // event: PropTypes.object.isRequired,\r\n    event: PropTypes.shape({\r\n        IsInfo: PropTypes.bool.isRequired,\r\n        Action: PropTypes.string.isRequired\r\n    }),\r\n};\r\n","import dispatcher from \"./ErrorsOnlyDispatcher\";\r\nimport {EventEmitter} from \"events\";\r\nimport * as ErrorsOnlyActions from \"./ErrorsOnlyActions\";\r\n\r\nclass ErrorsOnlyStore extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n        // local copy per message\r\n        this.activeErrorsOnly = false;\r\n        \r\n    }\r\n\r\n    // single handler for the app for each kind of message\r\n    handleActions(action) {\r\n        switch (action.type) {\r\n            // a casr per message\r\n            case ErrorsOnlyActions.ERRORS_ONLY_ACTION: {\r\n                this.activeErrorsOnly = action.value;\r\n                this.emit(\"storeUpdated\");\r\n                break;\r\n            }\r\n            default: {\r\n            }\r\n        }\r\n    }\r\n\r\n    // a method per message\r\n    getErrorsOnly() {\r\n        return this.activeErrorsOnly;\r\n    }\r\n}\r\n\r\nconst errorsOnlyStore = new ErrorsOnlyStore();\r\ndispatcher.register(errorsOnlyStore.handleActions.bind(errorsOnlyStore));\r\nexport default errorsOnlyStore;\r\n","import React, { Component } from 'react';\r\nimport MomentFormat from 'moment';\r\nimport {EventIcon} from \"./EventIcon\"\r\nimport classNames from \"classnames\"\r\nimport * as Enumerable from \"linq-es5\"\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import { makeStyles } from '@material-ui/styles'; alpha-next\r\n\r\nimport {BootAtButton} from \"./BootAtButton\";\r\nimport BootLogStaticDataSource from '../Final-Report.json'\r\nimport ErrorsOnlyStore from \"./ErrorsOnlyStore\";\r\nimport {LOG} from \"./AppUtils\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport './BootLog.css';\r\n\r\nvar proxyArrayFind = require('ponyfill-array'); /* IE 11 fix of find method */\r\nlet TheRoot = 'I IS GROOT';\r\nconsole.log(TheRoot);\r\nconst $ = window.$;\r\n\r\nconst stylesPanel = {\r\n    expanded: { marginTop: \"0px\", marginBottom: \"0px\" },\r\n};\r\n\r\nconst MyExpansionPanel = withStyles(stylesPanel, { name: 'MyExpansionPanel' })(ExpansionPanel);\r\n\r\nexport class BootLogRoot extends Component {\r\n\r\n    static displayName = BootLogRoot.name;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        var boots = BootLogStaticDataSource.Boots;\r\n        this.selectBootAt = this.selectBootAt.bind(this);\r\n        \r\n        LOG.toConsole(\"props of BootLogRoot\", props);\r\n        LOG.toConsole(\"match of BootLogRoot\", props.match);\r\n        \r\n        this.argBootAtKey = props.match.params.bootAtKey;\r\n        \r\n        console.log('type of boots: ' + (typeof boots));\r\n        console.log('boots[] length: ' + (boots.length));\r\n        LOG.toConsole(\"boots[]\", boots);\r\n\r\n        let startAt = +new Date();\r\n        let bootIndex = 0;\r\n        boots.map(boot => {\r\n            boot.UniqueKey = \"B\" + (++bootIndex);\r\n            boot.TotalErrors = boot.Fail + boot.Crash;\r\n            boot.HasErrors = boot.TotalErrors > 0;\r\n            boot.IsOk = !boot.HasErrors;\r\n            let mo = MomentFormat(boot.BootAt);\r\n            boot.DateField = mo.format(\"MMM DD (YYYY)\");\r\n            boot.TimeField = mo.format(\"HH:mm:ss A\");\r\n            let eventIndex = 0;\r\n            boot.Events.map(ev => {\r\n                ev.UniqueKey = `B${bootIndex}-E${++eventIndex}`;\r\n                ev.IsInfo = ev.Type === \"Information\";\r\n                ev.RoundedAt = ev.At < 100 ? Math.round(ev.At*10) / 10 : Math.round(ev.At);\r\n                if (ev.Message)\r\n                {\r\n                    // [\\w|\\s|$|\\(|\\)|\\+]\r\n                    ev.Message = ev.Message.replace(/([T|t]he )(.*)( service)/gm, function (str, the, servicename, service, offset, s) {\r\n                        let fullServiceName = ev.ServiceName ? ev.ServiceName : servicename; \r\n                        return `${the}<b>${fullServiceName}</b>${service}`;\r\n                    });\r\n                    \r\n                    if (!ev.IsInfo)\r\n                    {\r\n                        ev.Message = ev.Message.replace(/(timely|timeout)/gmi, function (str, timely, offset, s) {\r\n                            return `<u>${timely}</u>`;\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        let transformDuration = (+new Date()) - startAt;\r\n        console.log(`ON Start report mapping duration: ${transformDuration}`);\r\n\r\n        startAt = +new Date();\r\n        let servicesWithErrors = Enumerable.asEnumerable(boots)\r\n            .SelectMany(b => b.Events)\r\n            .Where(e => !e.IsInfo)\r\n            .Select(e => e.ServiceName)\r\n            .Distinct()\r\n            .OrderBy(name => name).ToArray();\r\n        transformDuration = (+new Date()) - startAt;\r\n        console.log(`${servicesWithErrors.length} services with errors: ${servicesWithErrors.join(\", \")}`);\r\n        console.log(`ON [Services with errors] duration: ${transformDuration}`);\r\n        \r\n\r\n        this.state = {\r\n            boots: boots, \r\n            selectedKey: \"\",\r\n            logEvents: [],\r\n            errorsOnly: ErrorsOnlyStore.getErrorsOnly(),\r\n            servicesWithErrors: servicesWithErrors,\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        ErrorsOnlyStore.on('storeUpdated', this.updateErrorsOnly);\r\n        console.log(\"componentDidMount()\");\r\n\r\n        let bootAtKey = this.props.match.params.bootAtKey;\r\n        if (bootAtKey)\r\n        {\r\n            let filtered = this.state.boots.filter(boot => boot.UniqueKey === bootAtKey);\r\n            if (filtered.length === 0)\r\n            {\r\n                // goto 404\r\n                bootAtKey = null;\r\n                console.log(`MOUNTING: [${bootAtKey}] not found`);\r\n            }\r\n        }\r\n\r\n        if (!bootAtKey && this.state.boots.length > 0) {\r\n            bootAtKey = this.state.boots[0].UniqueKey;\r\n        }\r\n        \r\n        if (bootAtKey) {\r\n            this.selectBootAt(bootAtKey);\r\n        }\r\n    }\r\n    \r\n    updateErrorsOnly = () => {\r\n        this.setState({errorsOnly: ErrorsOnlyStore.getErrorsOnly()});\r\n        console.log(`Change-Errors-Only event received: ${ErrorsOnlyStore.getErrorsOnly()}`);\r\n    };\r\n\r\n    selectBootAt(uniqueKey) {\r\n        let logPrefix = \"selectBootAt()\";\r\n        console.log(`selectBootAt() CLICK ON ${uniqueKey}`);\r\n        let boots = this.state.boots;\r\n        LOG.toConsole(`selectBootAt() [BootLogRoot]::state.boots`, boots);\r\n\r\n        let rowSource = this.state.boots.find( (el) => el.UniqueKey === uniqueKey);\r\n        \r\n        LOG.toConsole(`${logPrefix}DataSource found`, rowSource);\r\n        let events = rowSource ? rowSource.Events : [];\r\n        this.setState({\r\n            selectedKey: uniqueKey,\r\n            logEvents: events,\r\n            selectedBoot: rowSource,\r\n        });\r\n    }\r\n\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n\r\n    expandableServices = theme => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            flexBasis: '33.33%',\r\n            flexShrink: 0,\r\n        },\r\n        secondaryHeading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    });\r\n\r\n    render() {\r\n\r\n        let onlyErrors = this.state.errorsOnly;\r\n        let bootEvent = {\r\n            At: 0,\r\n            Action: \"Boot\",\r\n            Type: \"Information\",\r\n            TimeGenerated: this.state.selectedBoot ? this.state.selectedBoot.BootAt : undefined,\r\n            Message: \"The operating system started. \" + (this.state.errorsOnly ? \"Only fails of services are shown below.\" : \"\"),\r\n            IsInfo: true,\r\n        };\r\n\r\n        // const { expanded } = this.state;\r\n\r\n\r\n        return (\r\n            <div style={{}}>\r\n                <br/>\r\n\r\n                \r\n                <MyExpansionPanel >\r\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className=\"\">Warning! Found {this.state.servicesWithErrors.length} services with troubles</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Typography>\r\n                            {this.state.servicesWithErrors.map(svc =>\r\n                                <span key={svc}><nobr>{svc}</nobr><br/></span>\r\n                            )}\r\n                        </Typography>\r\n                    </ExpansionPanelDetails>\r\n                </MyExpansionPanel>\r\n                \r\n                <div style={{paddingTop: \"12px\", display: \"flex\", border: \"1px solid transparent\"}}>\r\n                    <div className=\"chooseBootAt\" style={{display: \"block\", flexGrow: 1, borderRight: \"1px solid transparent\", backgroundColor: \"inherit\", width: 160, minWidth: 160, maxWidth: 160}}>\r\n                        {this.state.boots.map(boot =>\r\n                            <BootAtButton key={boot.UniqueKey}\r\n                                onClick={() => { this.selectBootAt(boot.UniqueKey) }}\r\n                                bootAt={boot}\r\n                                isSelected={this.state.selectedKey === boot.UniqueKey}\r\n                                style={{display: \"block\"}}\r\n                            />\r\n                        )}\r\n                        <input type=\"button\" value=\"classic\" className=\"Hidden\"/>\r\n                    </div>\r\n                    \r\n                    <div style={{flexGrow: 6}}>\r\n                        {/* First event: Boot at */}\r\n                        <div className={classNames(\"Event\", \"InfoEvent\", {Hidden: !this.state.selectedBoot})}>\r\n                            <EventIcon event={bootEvent}/>{' '}\r\n                            <span id=\"EventAt\">{MomentFormat(bootEvent.TimeGenerated).format(\"HH:mm:ss A\")}</span>{': '}\r\n                            <span>{bootEvent.Message}</span>\r\n                        </div>\r\n                        {/* All the events */}\r\n                        {this.state.logEvents.filter(ev => !onlyErrors || !ev.IsInfo).map(ev =>\r\n                            <div key={ev.UniqueKey} className={classNames(\"Event\", ev.IsInfo ? \"InfoEvent\" : \"TroubleEvent\")}>\r\n                                <EventIcon event={ev}/>{' '}\r\n                                <span className=\"EventAt\">\r\n                                    {MomentFormat(ev.TimeGenerated).format(\"HH:mm:ss A\")}\r\n                                    {' at '}{ev.RoundedAt + \"s\"}\r\n                                </span>{', '}{ev.IsInfo ? \"\" : <span>[{ev.EventCode}]{' '}</span>}\r\n                                <span dangerouslySetInnerHTML={{__html: ev.Message}}/>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\r\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStopCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport { faTired } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleUp } from '@fortawesome/free-regular-svg-icons'\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\r\nimport {Component} from \"react\";\r\nimport React from \"react\";\r\n\r\nexport class Page404 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <h1 style={{textAlign: \"center\", fontSize:96,marginTop: 20}}>404</h1>\r\n        );\r\n    }\r\n}","import 'babel-polyfill';\r\nimport React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { BootLogRoot } from \"./components/BootLogRoot\";\r\nimport { Page404 } from \"./Page404\";\r\n\r\n// linq for IE 11 support\r\n// require('es5-shim');\r\n// require('es5-shim/es5-sham');\r\n// require('console-polyfill');\r\n\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    render () {\r\n        return (\r\n            <Layout>\r\n                <Route exact path='/boot-at/:bootAtKey/:bootAtComment' component={BootLogRoot} />\r\n                <Route exact path='/' component={BootLogRoot} />\r\n                {/* <Route component={Page404} /> */}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}